{"version":3,"file":"static/js/884.1982565f.chunk.js","mappings":"uMA6CA,UAvCqB,WAAO,IAAD,IACzB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAQjB,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GACVM,KAAKP,GACLQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,EAAzB,GACf,GAAE,CAACR,IAEkB,IAAlBF,EAAOa,OAAX,CAEA,IAAQC,EACNd,EADMc,YAAaC,EACnBf,EADmBe,MAAOC,EAC1BhB,EAD0BgB,aAAcC,EACxCjB,EADwCiB,aAAcC,EACtDlB,EADsDkB,OAAQC,EAC9DnB,EAD8DmB,SAE1DC,EAAaF,GAAUA,EAAOG,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAC3DC,EAAcC,SAAST,GACvBU,EAAYC,KAAKC,MAAqB,GAAfX,GACvBY,EAAYf,EApBG,kCAoB4BA,EAAc,KACzDgB,EAAY,oBAAG1B,EAAS2B,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACEhC,IACE,6BACE,SAAC,KAAD,CAAMiC,GAAIH,EAAV,sBACA,gBAAKI,IAAKL,EAAWM,IAAKpB,KAC1B,0BACGA,EADH,KACYS,EADZ,QAGA,uCAAeE,EAAf,QACA,uCACA,uBAAIP,KACJ,qCACA,uBAAIC,MAtBqB,CA0BhC,C,uJCvCDgB,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbC,QALU,oCAaCC,EAAiB,mCAAG,oGACRH,EAAAA,GAAAA,IAAU,uBAAwB,CAAEC,OAAAA,IAD5B,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,gFACpBC,GADoB,kBACHR,GADG,IACKO,MAAAA,IADL,SAEHR,EAAAA,GAAAA,IAAU,gBAAiB,CAAEC,OAAQQ,IAFlC,cAEpBL,EAFoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZnC,EAAY,mCAAG,WAAMuC,GAAN,uFACHV,EAAAA,GAAAA,IAAA,iBAAoBU,GAAM,CAAET,OAAAA,IADzB,cACpBG,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,qD","sources":["pages/MovieDetails.jsx","services/api-themoviedb.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/api-themoviedb';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(setMovies)\n      .catch(error => console.log('Error', error));\n  }, [movieId]);\n\n  if (movies.langth === 0) return;\n\n  const { poster_path, title, release_date, vote_average, genres, overview } =\n    movies;\n  const genresList = genres && genres.map(({ name }) => name).join(', ');\n  const releaseYear = parseInt(release_date);\n  const userScore = Math.floor(vote_average * 10);\n  const posterUrl = poster_path ? IMAGE_BASE_URL + poster_path : null;\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    movies && (\n      <main>\n        <Link to={backLinkHref}>Go back</Link>\n        <img src={posterUrl} alt={title} />\n        <h1>\n          {title} ({releaseYear})\n        </h1>\n        <p>User Score {userScore}%</p>\n        <h2>Overview:</h2>\n        <p>{overview}</p>\n        <h3>Genres:</h3>\n        <p>{genresList}</p>\n      </main>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = 'e7f9efb80ccf0ba9ba4df2587d484fba';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: KEY,\n  //   q: query,\n  //   image_type: 'photo',\n  //   orientation: 'horizontal',\n  //   page: page,\n  //   per_page: 12,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week', { params });\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const allParams = { ...params, query };\n  const response = await axios.get('/search/movie', { params: allParams });\n\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`, { params });\n\n  return response.data;\n};\n"],"names":["useState","movies","setMovies","movieId","useParams","location","useLocation","useEffect","getMovieById","then","catch","error","console","log","langth","poster_path","title","release_date","vote_average","genres","overview","genresList","map","name","join","releaseYear","parseInt","userScore","Math","floor","posterUrl","backLinkHref","state","from","to","src","alt","axios","params","api_key","getTrendingMovies","response","data","results","searchMovies","query","allParams","id"],"sourceRoot":""}